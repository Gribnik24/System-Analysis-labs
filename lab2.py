import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="–ú–µ—Ç–æ–¥ –≤–∑–≤–µ—à–µ–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫", layout="wide")

st.title("üß™ –ú–µ—Ç–æ–¥ –≤–∑–≤–µ—à–µ–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫")
st.header("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ 2, –∑–∞–¥–∞–Ω–∏–µ 9")

st.markdown("""
### –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 9:

**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:**
1. –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞
2. –ü–æ–∫—É–ø–∫–∞ –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–µ–≥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è  
3. –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞—Ä–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞
4. –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–∞—Ä–∫–∞ –º–∞—à–∏–Ω —Å–∫–æ—Ä–æ–π –ø–æ–º–æ—â–∏

**–ö–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–≤:** R‚ÇÅ = 8, R‚ÇÇ = 6, R‚ÇÉ = 7

**–ú–∞—Ç—Ä–∏—Ü–∞ –æ—Ü–µ–Ω–æ–∫:**
| –≠–∫—Å–ø–µ—Ä—Ç | Z‚ÇÅ | Z‚ÇÇ | Z‚ÇÉ | Z‚ÇÑ |
|---------|----|----|----|----|
| –≠‚ÇÅ      | 0.3 | 0.37 | 0.23 | 0.1 |
| –≠‚ÇÇ      | 0.15 | 0.35 | 0.23 | 0.27 |
| –≠‚ÇÉ      | 0.15 | 0.15 | 0.35 | 0.35 |
""")

# –î–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–¥–∞–Ω–∏—è
alternatives = [
    "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞",
    "–ü–æ–∫—É–ø–∫–∞ –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–µ–≥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
    "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞—Ä–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞",
    "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–∞—Ä–∫–∞ –º–∞—à–∏–Ω —Å–∫–æ—Ä–æ–π –ø–æ–º–æ—â–∏"
]

expert_competency = [8, 6, 7]  # R1, R2, R3

# –ú–∞—Ç—Ä–∏—Ü–∞ –æ—Ü–µ–Ω–æ–∫ (3 —ç–∫—Å–ø–µ—Ä—Ç–∞ √ó 4 –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã)
P = np.array([
    [0.3, 0.37, 0.23, 0.1],
    [0.15, 0.35, 0.23, 0.27],
    [0.15, 0.15, 0.35, 0.35]
])

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—ã
if P.shape != (3, 4):
    st.error("–û—à–∏–±–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–∞—Ö –º–∞—Ç—Ä–∏—Ü—ã –æ—Ü–µ–Ω–æ–∫!")
else:
    # 1. –ù–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    S = np.array(expert_competency) / sum(expert_competency)

    # 2. –í—ã—á–∏—Å–ª—è–µ–º –≤–µ—Å–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤
    V = np.zeros(4)
    for j in range(4):  # –ø–æ –∫–∞–∂–¥–æ–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–µ
        for i in range(3):  # –ø–æ –∫–∞–∂–¥–æ–º—É —ç–∫—Å–ø–µ—Ä—Ç—É
            V[j] += P[i][j] * S[i]

    # 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    df = pd.DataFrame({
        "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞": alternatives,
        "–í–µ—Å V_j": V,
        "–†–∞–Ω–≥": range(1, 5)
    })

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –≤–µ—Å–∞
    df = df.sort_values("–í–µ—Å V_j", ascending=False)
    df["–†–∞–Ω–≥"] = range(1, 5)

    # 4. –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤")

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("**–ù–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏:**")
        for i, s in enumerate(S, 1):
            st.write(f"S{i} = {s:.3f}")

    with col2:
        st.markdown("**–ò—Ç–æ–≥–æ–≤—ã–µ –≤–µ—Å–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤:**")
        for i, (alt, weight) in enumerate(zip(alternatives, V), 1):
            st.write(f"V{i} = {weight:.3f}")

    st.markdown("---")
    st.subheader("üéØ –†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤")

    # –ö—Ä–∞—Å–∏–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    st.dataframe(df.set_index("–†–∞–Ω–≥"), use_container_width=True)

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    st.bar_chart(df.set_index("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞")["–í–µ—Å V_j"])

    # –õ—É—á—à–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞
    best_alternative = df.iloc[0]["–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞"]
    st.success(f"**–ù–∞–∏–±–æ–ª–µ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:** {best_alternative}")